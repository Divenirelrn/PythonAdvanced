#Python的MRO即Method Resolution Order（方法解析顺序），即在调用方法时，会对当前类以及所有的基类进行一个搜索，以确定该方
# 法之所在，而这个搜索的顺序就是MRO。在Python2.3之前，MRO的实现是基于DFS的，而在Python2.3以后MRO的实现是基于C3算法（我
# 这里两种算法的具体实现都不详述）。C3算法最早被提出是用于Lisp的，应用在Python中是为了解决原来基于深度优先搜索算法不满
# 足本地优先级，和单调性的问题。本地优先级：指声明时父类的顺序，比如C(A,B)，如果访问C类对象属性时，应该根据声明顺序，
# 优先查找A类，然后再查找B类。单调性：如果在C的解析顺序中，A排在B的前面，那么在C的所有子类里，也必须满足这个顺序。

#总的来说，一个类的 MRO 列表就是合并所有父类的 MRO 列表，并遵循以下三条原则：
#子类永远在父类前面
#如果有多个父类，会根据它们在列表中的顺序被检查
#如果对下一个类存在两个合法的选择，选择第一个父类

#查看一个类的MRO
#类名.mro()
